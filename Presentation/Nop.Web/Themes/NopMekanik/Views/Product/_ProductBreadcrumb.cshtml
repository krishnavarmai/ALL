@model ProductDetailsModel.ProductBreadcrumbModel
@using Nop.Core.Domain.Common
@inject CommonSettings commonSettings
@{
    var breadcrumbDelimiter = commonSettings.BreadcrumbDelimiter;
}
@if (Model.Enabled)
{
    <div class="container">
        <div class="breadcrumb">
            <ul itemscope itemtype="http://schema.org/BreadcrumbList">
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductBreadcrumbBefore, additionalData = Model })
                <li>
                    <span>
                        <a href="@Url.RouteUrl("HomePage")" itemprop="url">
                            <span itemprop="title"><i class="fas fa-home"></i></span>
                        </a>
                    </span>
                    <i class="fas fa-angle-right"></i>
                </li>
                @{ int position = 1; }
                @foreach (var category in Model.CategoryBreadcrumb)
                {
                    <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
                        <span itemscope itemtype="http://data-vocabulary.org/Breadcrumb">
                            <a href="@Url.RouteUrl("Category", new { SeName = category.SeName })" itemprop="item">
                                <span itemprop="name">@category.Name</span>
                            </a>
                        </span>
                        <i class="fas fa-angle-right"></i>
                        <meta itemprop="position" content="@position" />
                    </li>
                    position++;
                }
                    <li li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
                        <strong class="current-item" itemprop="name">@Model.ProductName</strong>
                        <span itemprop="item" itemscope itemtype="http://schema.org/Thing">
                            <link itemprop="url" href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })">
                        </span>
                        <meta itemprop="position" content="@position" />
                        @*<strong class="current-item"><a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })">@Model.ProductName</a></strong>*@
                        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductBreadcrumbAfter, additionalData = Model })
                    </li>
            </ul>
        </div>
    </div>

}