@model CustomerInvoicesListModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-order-list-page");
    var kendoVersion = "2014.1.318";
    Html.AppendCssFileParts($"~/lib/kendo/{kendoVersion}/kendo.rtl.min.css");
    Html.AppendCssFileParts($"~/lib/kendo/{kendoVersion}/kendo.default.min.css");
    Html.AppendCssFileParts($"~/lib/kendo/{kendoVersion}/kendo.common.min.css");
    Html.AppendScriptParts($"~/lib/kendo/{kendoVersion}/kendo.web.min.js");
}
@section left
    {
    @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = CustomerNavigationEnum.Invoices })
}
@*<script src="https://kendo.cdn.telerik.com/2018.3.1017/js/kendo.all.min.js"></script>*@
@*<script src="js/kendo.all.min.js"></script>*@
<div class="page account-page order-list-page">
    <div class="page-title">
        <h1>@T("Account.MyAccount") - Invoices</h1>
    </div>
    <div class="page-body">

        <div class="content">
            <div class="form-horizontal">
                <div class="panel-group">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div id="invoices-grid"></div>

                            <div id="openinvoices-grid" style="display:none;"></div>

                            <div class="form-fields" id="CreditcardPayment" style="display: none;">
                                <div class="inputs">
                                    <label for="Amount">Total Amount #:</label>
                                    <input type="text" data-val="true" style="width:29%" id="TotalAmount" name="Amount" disabled>
                                </div>
                                <div class="inputs">
                                    <label for="CreditCard">Credit Card #:</label>
                                    <input type="text" data-val="true" style="width:29%" id="CreditCard" name="CreditCard">
                                    <span class="required">*</span>
                                </div>
                                <div class="inputs date-of-birth">
                                    <label>Expiry Date:</label>
                                    <div class="date-picker-wrapper">
                                        <select name="ExpiryMonth" id="ExpiryMonth" data-val="true"><option value="">Month</option><option value="1">January</option><option value="2">February</option><option value="3">March</option><option value="4">April</option><option value="5">May</option><option value="6">June</option><option value="7">July</option><option value="8">August</option><option value="9">September</option><option value="10">October</option><option value="11">November</option><option value="12">December</option></select><span class="required">*</span>
                                        <select name="ExpiryYear" id="ExpiryYear" data-val="true"><option value="">Year</option><option value="2018">2018</option><option value="2019">2019</option><option value="2020">2020</option><option value="2021">2021</option><option value="2022">2022</option><option value="2023">2023</option><option value="2024">2024</option><option value="2025">2025</option><option value="2026">2026</option></select><span class="required">*</span>
                                    </div>
                                </div>
                                <div class="inputs">
                                    <label for="Email">CVV:</label>
                                    <input type="text" style="width:29%" data-val="true" id="CVV" name="CVV">
                                    <span class="required">*</span>
                                </div>
                                <div class="inputs">
                                    <input type="submit" id="btnSubmitPayments" value="Submit Payment" onclick="submitPayment()" name="save-info-button" class="button-1 save-customer-info-button">
                                </div>
                            </div>



                            <div class="buttons">
                                <input type="submit" id="btnOpenInvoces" value="open Invoices" onclick="openInvoices()" name="save-info-button" class="button-1 save-customer-info-button">
                                <input type="submit" id="btnPayInvoices" value="Pay Invoices" style="display:none;" onclick="onCheckboxChange()" name="save-info-button" class="button-1 save-customer-info-button">
                            </div>
                            <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                            <input type="hidden" id="InvoiceNums" value="" />
                            <script>
                                var InvoiceNums = "";
                                var statesProgress = $("#states-loading-progress");

                                function onPageChange() {
                                    InvoiceNums = $("#InvoiceNums").val();
                                    var selectedCheckBox = $('.InvNum:checkbox:checked');
                                    if (selectedCheckBox.length != undefined && selectedCheckBox.length > 0) {
                                        $("#CreditcardPayment").show();
                                        selectedCheckBox.each(function () {
                                            var arrayvalues = $("#InvoiceNums").val().split(";");
                                            if (arrayvalues.indexOf($(this).attr('name')) < 0) {
                                                if (InvoiceNums.length > 0 && InvoiceNums.charAt(InvoiceNums.length - 1) != ';')
                                                    InvoiceNums += ";";
                                                InvoiceNums += $(this).attr('name') + ";";
                                                if ($("#TotalAmount").val() == "") {
                                                    $("#TotalAmount").val($(this).attr('amount'));
                                                }
                                                else {
                                                    $("#TotalAmount").val(Number($("#TotalAmount").val()) + Number($(this).attr('amount')));
                                                }
                                            }
                                        });
                                        if (InvoiceNums.length > 0 && InvoiceNums.charAt(InvoiceNums.length - 1) == ';')
                                            InvoiceNums = InvoiceNums.substring(0, InvoiceNums.length - 1);

                                        $("#InvoiceNums").val(InvoiceNums);
                                        console.log(InvoiceNums);
                                    }
                                    if (InvoiceNums.length == 0) {
                                        $("#CreditcardPayment").hide();
                                    }

                                    var invnums = $("#InvoiceNums").val().split(";");
                                    $.each(invnums, function (key, value) {
                                        if (value != "") {
                                            if ($("input[name=" + value + "]") != undefined)
                                                $("input[name=" + value + "]").prop("checked", true);

                                        }
                                    });
                                }

                                function onCheckboxChange() {
                                    var invnums = $("#InvoiceNums").val().split(";");
                                    var nonSelectedCheckBox = $('.InvNum:checkbox:unchecked');
                                    if (nonSelectedCheckBox.length != undefined && nonSelectedCheckBox.length > 0) {
                                        nonSelectedCheckBox.each(function () {

                                            if (invnums.indexOf($(this).attr('name')) > -1) {
                                                var values = $("#InvoiceNums").val();
                                                values = values.replace($(this).attr('name'), "");
                                                values = values.replace(";;", ";");
                                                $("#InvoiceNums").val(values);
                                                if ($("#TotalAmount").val() != "") {
                                                    $("#TotalAmount").val(Number($("#TotalAmount").val()) - Number($(this).attr('amount')));
                                                }

                                            }
                                        });
                                    }
                                    onPageChange();
                                }

                                function updateInvNumbers() {
                                }

                                function openInvoices() {
                                    $("#invoices-grid").hide();
                                    $("#openinvoices-grid").show();
                                    $("#btnOpenInvoces").hide();
                                    $("#btnPayInvoices").show();
                                }



                                function submitPayment() {
                                    statesProgress.show();
                                    if ($("#CreditCard").val() == null || $("#CreditCard").val() == "") {
                                        alert("Credit card Number Required");
                                        statesProgress.hide();
                                        return;
                                    }
                                    if ($("#CVV").val() == null || $("#CVV").val() == "") {
                                        alert("CVV Required");
                                        statesProgress.hide();
                                        return;
                                    }
                                    if ($("#ExpiryMonth").val() == null || $("#ExpiryMonth").val() == "") {
                                        alert("Expiry month required.");
                                        statesProgress.hide();
                                        return;
                                    }
                                    if ($("#ExpiryYear").val() == null || $("#ExpiryYear").val() == "") {
                                        alert("Expiry month required.");
                                        statesProgress.hide();
                                        return;
                                    }
                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "@Html.Raw(Url.Action("SubmitPaymentList", "Customer"))",
                                        data: { "InvoiceIds": InvoiceNums, "CardNumber": $("#CreditCard").val(), "CVV": $("#CVV").val(), "ExpiryMonth": $("#ExpiryMonth").val(), "ExpiryYear": $("#ExpiryYear").val() },
                                        success: function (data) {
                                            if (data == true) {
                                                location.reload();
                                                $("#CreditCard").val("");
                                                $("#CVV").val("");
                                                $("#ExpiryMonth").val("");
                                                $("#ExpiryYear").val("");
                                                $("#TotalAmount").val("");
                                                $("#InvoiceNums").val("");
                                            }
                                            else {
                                                alert("Something went wrong please contact admin.")
                                            }
                                            statesProgress.hide();
                                        },
                                        error: function (xhr, ajaxOptions, thrownError) {
                                            statesProgress.hide();
                                            alert('Failed to retrieve status.');
                                        }
                                    });
                                    return false;
                                }
                                function clearAllFields() {


                                }


                                $(document).ready(function() {
                                    $("#invoices-grid").kendoGrid({
                                columns: [
                                    {
                                        field: "InvoiceNum",
                                        title: "InvoiceNum",
                                        width: 300
                                    }, {
                                        field: "InvDate",
                                        title: "InvDate",
                                        type: "date",
                                        format: "{0:G}",
                                        width: 100
                                    }, {
                                        field: "Amount",
                                        title: "Amount",
                                        width: 200,
                                    }, {
                                        field: "Status",
                                        title: "Status",
                                        width: 200,
                                    }, {
                                        field: "Id",
                                        title: "Edit",
                                        width: 80,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: '<a class="btn btn-default" href="EditForumGroup/#=Id#"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</a>'
                                    }
                                ],
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("InvoicesList", "Customer"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        }
                                    },
                                    pageable: true,
                                    serverPaging: false,
                                    pageSize: 5
                                },
                                pageable: {
                                    refresh: true,
                                    alwaysVisible: false,
                                    pageSizes: true

                                },
                                //details grid
                                //detailInit: detailInit,
                                scrollable: false,


                                    });


                        });


                                $(document).ready(function () {
                                    $("#openinvoices-grid").kendoGrid({
                                        columns: [
                                            {
                                                field: "Id",
                                                title: "Select",
                                                width: 80,
                                                template: '<input type="checkbox" name="#=InvoiceNum#" amount="#=Amount#" class="InvNum" onclick="onCheckboxChange()" />'
                                            },
                                            {
                                                field: "InvoiceNum",
                                                title: "InvoiceNum",
                                                attributes: { class: "InvNum" },
                                                width: 200
                                            }, {
                                                field: "InvDate",
                                                title: "InvDate",
                                                type: "date",
                                                format: "{0:G}",
                                                width: 300
                                            }, {
                                                field: "Amount",
                                                title: "Amount",
                                                width: 100,
                                            }, {
                                                field: "Status",
                                                title: "Status",
                                                width: 200,
                                            }
                                        ],
                                        dataSource: {
                                            type: "json",
                                            transport: {
                                                read: {
                                                    url: "@Html.Raw(Url.Action("OpenInvoicesList", "Customer"))",
                                                    type: "POST",
                                                    dataType: "json",
                                                    data: addAntiForgeryToken
                                                }
                                            },
                                            pageable: true,
                                            serverPaging: false,
                                            pageSize: 5,

                                        },

                                pageable: {
                                    refresh: false,
                                    alwaysVisible: false,
                                    pageSizes: true,
                                    change: function (e) {
                                        onPageChange();
                                    }
                                        },
                                        page: function (e) {
                                            console.log(e.page);
                                            console.log("sas");
                                        },
                                        selectable: "multiple",
                                        navigatable: true,
                                persistSelection: true,
                                //details grid
                                //detailInit: detailInit,
                                scrollable: false,


                                    });


                        });

                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>